import sys
from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QMainWindow, QAction, QMenu, QApplication
from PyQt5.QtWidgets import QMainWindow, QAction, qApp, QApplication
from PyQt5.QtGui import QIcon




class Canvas(QtWidgets.QLabel):

    def __init__(self):
        super().__init__()
        pixmap = QtGui.QPixmap(1024, 600)
        pixmap.fill(QtGui.QColor('white'))
        self.setPixmap(pixmap)
        self.penWidth = 4

        self.last_x, self.last_y = None, None
        self.pen_color = QtGui.QColor('black')

    def set_pen_color(self, c):
        self.pen_color = QtGui.QColor(c)

    def mouseMoveEvent(self, e):
        if self.last_x is None: # First event.
            self.last_x = e.x()
            self.last_y = e.y()
            return # Ignore the first time.

        painter = QtGui.QPainter(self.pixmap())
        p = painter.pen()  #Makes a pen
        p.setWidth(self.penWidth)
        p.setColor(self.pen_color)
        painter.setPen(p)
        painter.drawLine(self.last_x, self.last_y, e.x(), e.y())
        painter.end()
        self.update()

        # Update the origin for next time.
        self.last_x = e.x()
        self.last_y = e.y()

    def mouseReleaseEvent(self, e):
        self.last_x = None
        self.last_y = None



COLORS = [
'#000000', '#141923', '#414168', '#3a7fa7', '#35e3e3', '#8fd970', '#5ebb49',
'#458352', '#dcd37b', '#fffee5', '#ffd035', '#cc9245', '#a15c3e', '#a42f3b',
'#f45b7a', '#c24998', '#81588d', '#bcb0c2', '#ffffff',
]


class QPaletteButton(QtWidgets.QPushButton):

    def __init__(self, color):
        super().__init__()
        self.setFixedSize(QtCore.QSize(24,24))
        self.color = color
        self.setStyleSheet("background-color: %s;" % color)



class MainWindow(QtWidgets.QMainWindow):

    def __init__(self):
        super().__init__()

        self.canvas = Canvas()  #Canvas instantiated
        self.initUI()
        self.penWidth = 4
        w = QtWidgets.QWidget()
        l = QtWidgets.QVBoxLayout()
        w.setLayout(l)
        l.addWidget(self.canvas)

        palette = QtWidgets.QHBoxLayout()
        self.add_palette_buttons(palette)
        l.addLayout(palette)

        self.setCentralWidget(w)
        print("1")
    
    def add_palette_buttons(self, layout):
        for c in COLORS:
            b = QPaletteButton(c)
            b.pressed.connect(lambda c=c: self.canvas.set_pen_color(c))
            layout.addWidget(b)

        print("2")

    
    def initUI(self):
        print("3")
        menubar = self.menuBar()
        fileMenu = menubar.addMenu('Pen')

        impMenu = QMenu('Width', self)
        impAct = QAction('Big', self)
        impAct1 = QAction('Medium', self)
        impAct2 = QAction('Small', self)
        impAct2.triggered.connect(self.set_pen_small)
        impAct1.triggered.connect(self.set_pen_medium)
        impAct.triggered.connect(self.set_pen_big)
        impMenu.addAction(impAct)
        impMenu.addAction(impAct1)
        impMenu.addAction(impAct2)
        fileMenu.addMenu(impMenu)
        self.setGeometry(300, 300, 300, 200)
        self.setWindowTitle('Paint')
        self.show()

    def set_pen_small(self):
        self.canvas.penWidth = 2

    def set_pen_medium(self):
        self.canvas.penWidth = 4

    def set_pen_big(self):
        self.canvas.penWidth = 8


        
def main():
    app = QApplication(sys.argv)
    ex = MainWindow()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()


app = QtWidgets.QApplication(sys.argv)
window = MainWindow()
window.show()
app.exec_()
